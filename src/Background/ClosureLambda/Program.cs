// Первая парадигма ФОП (Функционально Ориентированное Программирование) -
// Замыкание (Closure)

// Замыкание представляет объект функции,
// который запоминает свое лексическое окружение даже в том случае,
// когда она выполняется вне своей области видимости.

/*
 Технически замыкание включает в себя три компонента:
    - внешняя функция, которая определяет некоторую область видимости 
    и в которой определены некоторые переменные и параметры - лексическое окружение
    - переменные и параметры (лексическое окружение), которые определены во внешней функции
    - вложенная функция, которая использует переменные и параметры внешней функции
*/

//замыканий через локальные функции
var func = Outer();
// func == Inner, так как метод Outer возвращает функцию Inner
// вызываем внутреннюю функцию Inner:
func();   // 6
func();   // 7
func();   // 8

Action Outer()  // метод или внешняя функция
{
    int x = 5;  // лексическое окружение - локальная переменная
    void Inner()    // локальная функция
    {
        x++;        // операции с лексическим окружением
        WriteLine(x);
    }
    return Inner;   // возвращаем локальную функцию
}
// Переменная func и представляет собой замыкание, то есть объединяет две вещи:
// функцию и окружение, в котором функция была создана. 

ReadKey();